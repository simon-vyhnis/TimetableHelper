@page "/teachers"
@using Microsoft.EntityFrameworkCore
@using TimetableHelper.Components.Widgets
@using TimetableHelper.Models
@inject IDbContextFactory<TimetableHelper.Data.TimetableHelperContext> DbFactory
@inject NavigationManager NavigationManager
<h3>Učitelé</h3>
<button @onclick="OpenAddModal" class="btn btn-primary"><i class="bi bi-person-plus-fill"></i> Přidat učitele</button>
@if(teachers == null || teachers.Count() == 0)
{
    <p>Zatím nebyli přidáni žádní učitelé. Pro přidání použijte tlačítko výše.</p>
}
else
{
    <table  class="table">
        <thead>
            <tr>
                <th>Jméno</th>
                <th>Předměty</th>
                <th>Cílový úvazek</th>
                <th>Aktuální úvazek</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var teacher in teachers)
            {
                <tr>
                    <td>@teacher.Name</td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
            }
        </tbody>
    </table>
}
<CascadingValue Value="@newTeacher">
    <AddModal @ref=modal SaveMethod="Addteacher">
        <Title>Přidat učitele</Title>
        <Body>
            <div class="mb-3">
                <label>
                    Jméno
                    <input class="form-control" @bind="newTeacher.Name" />
                </label>
            </div>
        </Body>
    </AddModal>
</CascadingValue>

@code {
    List<Teacher>? teachers;
    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        teachers = await context.Teacher.ToListAsync();
    }

    private AddModal modal;
    public Teacher newTeacher = new Teacher();
    private void OpenAddModal()
    {
        newTeacher = new Teacher();
        modal.Open();
    }
    private async void Addteacher(object body)
    {
        using var context = DbFactory.CreateDbContext();
        await context.Teacher.AddAsync(newTeacher);
        context.SaveChanges();
        modal.Close();
        NavigationManager.NavigateTo(NavigationManager.Uri, true);
    }
}
