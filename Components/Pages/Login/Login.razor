@using Microsoft.AspNetCore.Identity
@using TimetableHelper.Models
@using Microsoft.EntityFrameworkCore
@inject NavigationManager NavigationManager
@inject SignInManager<User> SignInManager
@inject IServiceProvider ServiceProvider

<PageTitle>Přihlášení do Rozvrháře</PageTitle>

<div class="login d-flex align-items-center">
    <div class="container">
        <div class="row">
            <div class="col white-text">
                <h1>Vítejte v rozvrháři!</h1>
                <p>Aplikaci pro usnadnění tvorby rozvrhů</p>
            </div>
            <div class="col">
                <div class="card">
                    <div class="card-body">
                        @if (userCount == 0)
                        {
                            <h5 class="card-title"><b>Vytvoření prvního uživatele</b></h5>
                            <i class="mb-3">V rámci této instalace systému ještě nebyl vytvořený žadný uživatel. Vytvořte prvního uživatele a poté se pomocí něj můžete přihlásit.</i>
                            @if(errorMessage != null)
                            {
                                <div class="alert alert-danger mb-3" role="alert">
                                    @errorMessage
                                </div>
                            }
                            <div class="mb-3">
                                <label for="username">Uživatelské jméno:</label>
                                <input id="username" class="form-control" @bind="newUsername" />
                            </div>
                            <div class="mb-3">
                                <label for="password">Heslo:</label>
                                <input id="password" type="password" class="form-control" @bind="newPassword" />
                            </div>
                            <div>
                                <button @onclick="CreateNew" class="btn btn-primary">Vytvořit</button>
                            </div>
                        }
                        else
                        {
                            <h5 class="card-title"><b>Přihlášení</b></h5>
                            @if (errorMessage != null)
                            {
                                <div class="alert alert-danger mb-3" role="alert">
                                    @errorMessage
                                </div>
                            }
                            <div class="mb-3">
                                <label for="username">Uživatelské jméno:</label>
                                <input id="username" class="form-control" @bind="loginUsername" />
                            </div>
                            <div class="mb-3">
                                <label for="password">Heslo:</label>
                                <input id="password" type="password" class="form-control" @bind="loginPassword" />
                            </div>
                            <div>
                                <button @onclick="(()=>InvokeAsync(HandleLogin))" class="btn btn-primary">Přihlásit se</button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string loginUsername;
    private string loginPassword;
    private string newUsername;
    private string newPassword;
    private string? errorMessage;
    private int userCount = 0;
    private UserManager<User> UserManager;

    protected override async Task OnInitializedAsync()
    {
        UserManager = ServiceProvider.GetRequiredService<UserManager<User>>();
        userCount = await UserManager.Users.CountAsync();
    }

    private async Task HandleLogin()
    {
        var result = await SignInManager.PasswordSignInAsync(loginUsername, loginPassword, false, false);
        if (result.Succeeded)
        {
            NavigationManager.NavigateTo("/",true);
        }
        else
        {
            errorMessage = "Neplatné přihlašovací údaje.";
            await InvokeAsync(StateHasChanged);
        }
    }

    private async Task CreateNew()
    {
        if (string.IsNullOrEmpty(newUsername) || string.IsNullOrEmpty(newPassword))
        {
            errorMessage = "Zadejte platné přihlašovací údaje.";
            await InvokeAsync(StateHasChanged);
            return;
        }

        var newUser = new User { UserName = newUsername };
        var result = await UserManager.CreateAsync(newUser, newPassword);

        if (result.Succeeded)
        {
            errorMessage = "Uživatel vytvořen, nyní se můžete přihlásit.";
            userCount = 1; // Switch to login form
        }
        else
        {
            errorMessage = "Chyba při vytváření nového uživatele. Heslo musí mít alespoň 6 znaků a obsahovat číslici.";
        }
        await InvokeAsync(StateHasChanged);
    }
}
