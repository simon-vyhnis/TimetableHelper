@page "/rooms"
@using Microsoft.EntityFrameworkCore
@using TimetableHelper.Components.Widgets
@using TimetableHelper.Models
@inject IDbContextFactory<TimetableHelper.Data.TimetableHelperContext> DbFactory
@inject NavigationManager NavigationManager
<PageTitle>Učebny</PageTitle>
<h2>Učebny</h2>
<button @onclick="OpenAddModal" class="btn btn-primary"><i class="bi bi-plus-square-fill"></i> Přidat učebny</button>
@if (rooms == null || rooms.Count() == 0)
{
    <p>Zatím nebyly přidány žádné učebny. Pro přidání použijte tlačítko výše.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Název</th>
                <th>Zkratka</th>
                <th>Kapacita</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var room in rooms)
            {
                <tr>
                    <td>@room.Name</td>
                    <td>@room.ShortName</td>
                    <td>@room.Capacity</td>
                </tr>
            }
        </tbody>
    </table>
}
<CascadingValue Value="@newRoom">
    <AddModal @ref=modal SaveMethod="AddRoom">
        <Title>Přidat učebnu</Title>
        <Body>
            <div class="mb-3">
                <label>
                    Název učebny
                    <input class="form-control" @bind="newRoom.Name" />
                </label>
            </div>
            <div class="mb-3">
                <label>
                    Zkratka
                    <input class ="form-control" @bind="newRoom.ShortName" />
                </label>
            </div>
            <div class="mb-3">
                <label>
                    Kapacita
                    <input class ="form-control" @bind="newRoom.Capacity" />
                </label>
            </div>
        </Body>
    </AddModal>
</CascadingValue>

@code {
    private List<Room>? rooms;
    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        rooms = await context.Room.ToListAsync();
    }
    private AddModal modal;
    public Room newRoom = new Room();
    private void OpenAddModal()
    {
        newRoom = new Room();
        modal.Open();
    }
    private async void AddRoom(object body)
    {
        using var context = DbFactory.CreateDbContext();
        await context.Room.AddAsync(newRoom);
        context.SaveChanges();
        modal.Close();
        NavigationManager.NavigateTo(NavigationManager.Uri, true);
    }
}
    
