@page "/groups"
@using Microsoft.EntityFrameworkCore
@using TimetableHelper.Components.Widgets
@using TimetableHelper.Models
@inject IDbContextFactory<TimetableHelper.Data.TimetableHelperContext> DbFactory
@inject NavigationManager NavigationManager
<PageTitle>Třídy</PageTitle>
<div class="row">
    <div class="col-auto">
        <h2>Skupiny studentů (mezitřídní)</h2>
        <i>Pouze mezitřídní skupiny, skupiny v rámci jedné třídy lze upravovat a přidávat na stránce dané třídy.</i>
    </div>
    <div class="col-auto">
        <button @onclick="OpenAddModal" class="btn btn-primary"><i class="bi bi-clipboard-plus-fill"/> Přidat skupinu</button>
    </div>
</div>
@if (groups == null)
{
    <p>Načítání...</p>
}
else if (groups.Count() == 0)
{
    <p>Zatím nebyly přidány žádné skupiny. Pro přidání použijte tlačítko výše.</p>
}
else
{
    <table class="table table-striped table-bordered table-hover clickable">
        <thead>
            <tr>
                <th>Název</th>
                <th>Počet studentů</th>
                <th>Vytvořený rozvrh</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var clas in groups)
            {
                <tr @onclick="@(()=>NavigationManager.NavigateTo($"{NavigationManager.BaseUri}class?id={clas.Id}"))">
                    <td>@clas.Name</td>
                    <td>@clas.Students.Count()</td>
                    <td></td>
                </tr>
            }
        </tbody>
    </table>
}
<CascadingValue Value="@newGroup">
    <AddModal @ref=modal SaveMethod="AddClass">
        <Title>Přidat skupinu</Title>
        <Body>
            <div class="mb-3">
                <label>
                    Označení třídy
                    <input class="form-control" @bind="newGroup.Name" />
                </label>
            </div>
        </Body>
    </AddModal>
</CascadingValue>

@code {
    List<Group>? groups;
    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        groups = await context.Group.ToListAsync();
    }

    private AddModal modal;
    public Group newGroup = new Group();
    private void OpenAddModal()
    {
        newGroup = new Group();
        modal.Open();
    }
    private async void AddClass(object body)
    {
        using var context = DbFactory.CreateDbContext();
        await context.Group.AddAsync(newGroup);
        context.SaveChanges();
        modal.Close();
        NavigationManager.NavigateTo(NavigationManager.Uri, true);
    }
}